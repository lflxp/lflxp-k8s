import{m as Y,r as l,aS as q,aT as v,j as o,aU as U,aV as X,aW as A,aX as Z,aY as J,aZ as K,a_ as Q,a$ as ee,b0 as ae,b1 as D,b2 as te,b3 as oe,d as i,o as x,B as se}from"./index-Sj8PalxT.js";/**
 * @license @tabler/icons-react v3.24.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var he=Y("outline","trash","IconTrash",[["path",{d:"M4 7l16 0",key:"svg-0"}],["path",{d:"M10 11l0 6",key:"svg-1"}],["path",{d:"M14 11l0 6",key:"svg-2"}],["path",{d:"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12",key:"svg-3"}],["path",{d:"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3",key:"svg-4"}]]);function je(e=null){const[a,t]=l.useState(e);return[a,r=>t(c=>c===r?null:r)]}var N="AlertDialog",[re,Ce]=q(N,[v]),n=v(),y=e=>{const{__scopeAlertDialog:a,...t}=e,s=n(a);return o.jsx(oe,{...s,...t,modal:!0})};y.displayName=N;var le="AlertDialogTrigger",ie=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,r=n(t);return o.jsx(U,{...r,...s,ref:a})});ie.displayName=le;var ne="AlertDialogPortal",h=e=>{const{__scopeAlertDialog:a,...t}=e,s=n(a);return o.jsx(te,{...s,...t})};h.displayName=ne;var ce="AlertDialogOverlay",j=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,r=n(t);return o.jsx(X,{...r,...s,ref:a})});j.displayName=ce;var g="AlertDialogContent",[de,pe]=re(g),C=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:s,...r}=e,c=n(t),p=l.useRef(null),m=A(a,p),u=l.useRef(null);return o.jsx(Z,{contentName:g,titleName:R,docsSlug:"alert-dialog",children:o.jsx(de,{scope:t,cancelRef:u,children:o.jsxs(J,{role:"alertdialog",...c,...r,ref:m,onOpenAutoFocus:K(r.onOpenAutoFocus,d=>{var f;d.preventDefault(),(f=u.current)==null||f.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(Q,{children:s}),o.jsx(ue,{contentRef:p})]})})})});C.displayName=g;var R="AlertDialogTitle",_=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,r=n(t);return o.jsx(ee,{...r,...s,ref:a})});_.displayName=R;var b="AlertDialogDescription",w=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,r=n(t);return o.jsx(ae,{...r,...s,ref:a})});w.displayName=b;var ge="AlertDialogAction",E=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,r=n(t);return o.jsx(D,{...r,...s,ref:a})});E.displayName=ge;var S="AlertDialogCancel",T=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...s}=e,{cancelRef:r}=pe(S,t),c=n(t),p=A(a,r);return o.jsx(D,{...c,...s,ref:p})});T.displayName=S;var ue=({contentRef:e})=>{const a=`\`${g}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${g}\` by passing a \`${b}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${g}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var s;document.getElementById((s=e.current)==null?void 0:s.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},fe=y,me=h,O=j,P=C,M=E,$=T,I=_,k=w;const ve=fe,Ae=me,F=l.forwardRef(({className:e,...a},t)=>o.jsx(O,{className:i("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));F.displayName=O.displayName;const L=l.forwardRef(({className:e,...a},t)=>o.jsxs(Ae,{children:[o.jsx(F,{}),o.jsx(P,{ref:t,className:i("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));L.displayName=P.displayName;const z=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col space-y-2 text-center sm:text-left",e),...a});z.displayName="AlertDialogHeader";const B=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});B.displayName="AlertDialogFooter";const G=l.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:i("text-lg font-semibold",e),...a}));G.displayName=I.displayName;const H=l.forwardRef(({className:e,...a},t)=>o.jsx(k,{ref:t,className:i("text-sm text-muted-foreground",e),...a}));H.displayName=k.displayName;const De=l.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:i(x(),e),...a}));De.displayName=M.displayName;const V=l.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:i(x({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));V.displayName=$.displayName;function Re(e){const{title:a,desc:t,children:s,className:r,confirmText:c,cancelBtnText:p,destructive:m,isLoading:u,disabled:d=!1,handleConfirm:f,name:xe,namespace:Ne,...W}=e;return o.jsx(ve,{...W,children:o.jsxs(L,{className:i(r&&r),children:[o.jsxs(z,{className:"text-left",children:[o.jsx(G,{children:a}),o.jsx(H,{asChild:!0,children:o.jsx("div",{children:t})})]}),s,o.jsxs(B,{children:[o.jsx(V,{disabled:u,children:p??"Cancel"}),o.jsx(se,{variant:m?"destructive":"default",onClick:f,disabled:d||u,children:c??"Continue"})]})]})})}export{Re as C,he as I,je as u};
